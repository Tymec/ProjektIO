name: Python CI

on:
	pull_request: {}
	push:
		branches: main
		tags: "*"

jobs:
	test:
		runs-on: ubuntu-latest
    timeout-minutes: 10
		steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
			- run: make backend audit
      - run: make backend lint
      - run: make backend coverage
        env:
          CI: true

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: backend/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: backend/coverage.xml

	docs:
    needs: test
		runs-on: ubuntu-latest
		steps:
			- uses: actions/checkout@v3
        ref: ${{ github.head_ref }}
        fetch-depth: 0

      - uses: ./.github/actions/setup
      - run: make backend uml
      - run: make backend docs

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add backend/docs/
          git commit -m "docs: generate uml diagrams and documentation" || true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.head_ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

	docker-image:
    needs: test
		runs-on: ubuntu-latest
		steps:
			- uses: actions/checkout@v3

			- name: Build docker image
				run: docker build . -t projekt_io

			- name: Test image
				run: |
					docker run --rm -d --name test_container -p 8000:8000 projekt_io
					docker run --link test_container:test_container waisbrot/wait
					curl --fail http://localhost:8000
